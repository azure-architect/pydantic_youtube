{
    "UCMwVTLZIRRUyyVrkjDpn4pA": {
        "videos": [
            {
                "id": "AgN3RHSZGwI",
                "title": "10x Your AI Agents with this ONE Agent Architecture",
                "description": "Complex problems always yield better results when tackled by teams of people with different specializations. The same principle applies to AI agents - individual expertise combined creates exponentially more powerful solutions. Just like people, AI agents perform better the more narrow their role and goals are - it\u2019s all about focus. Taking what could be a single AI agent and fragmenting it into an army of specialized experts.\n\nIn this video, we\u2019ll build a parallel agent architecture using my two favorite frameworks - Pydantic AI and LangGraph, so we can have a group of specialized agents running simultaneously all working to accomplish the same goal.\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nIntegrate anything and automate anything with AI agents using Lutra, check it out here and get started for free!\n\nhttps://lutra.ai/\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nAll the code created in this video can be found here:\n\nhttps://github.com/coleam00/ottomator-agents/tree/main/pydantic-ai-langgraph-parallelization\n\nIf you want to see these AI agent principles used in a full fledged use case (the real deal and it's open source), check out Archon - the AI agent that builds other AI agents using Pydantic AI and LangGraph:\n\nhttps://github.com/coleam00/Archon\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n00:00 - 10x Your Agents with Agent Specialization\n01:52 - Parallel Agent Architecture Explained Simply\n03:37 - Architecture for Our Travel Planner Assistant\n04:40 - Parallel Specialized Agents Demo\n05:41 - Parallel Agents in Archon\n07:15 - Travel Planner Assistant Overview\n08:33 - Building Our First Specialized Agent\n12:53 - Chatting with Our Specialized Agent\n14:15 - Lutra.ai\n16:51 - The Other Specialized Agents\n18:02 - Synthesizer/Aggregator Agent\n18:50 - Info Gathering Agent\n21:00 - Diving into Our LangGraph Implementation\n22:27 - Defining the State for Our Graph\n23:13 - Creating the Graph Structure\n24:59 - Info Gathering Agent Node\n29:11 - Parallel Specialized Agent Nodes\n31:29 - Synthesizer Agent Node\n32:44 - Finishing Our Graph\n36:06 - Using Our Agent with a Frontend\n38:38 - Final Demo\n40:51 - Outro\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nJoin me as I push the limits of what is possible with AI. I'll be uploading videos at least two times a week - Sundays and Wednesdays at 7:00 PM CDT!",
                "publishedAt": "2025-03-24T00:00:07Z",
                "thumbnail": "https://i.ytimg.com/vi/AgN3RHSZGwI/default.jpg"
            },
            {
                "id": "v_6EXt6T83I",
                "title": "Claude MCP has Changed AI Forever - Here's What You NEED to Know",
                "description": "Everyone is starting to realize how big of a deal Claude\u2019s Model Context Protocol (MCP) is - it\u2019s the first ever \u201cstandard\u201d for connecting LLMs with services like your database, Slack, GitHub, web search, etc. It\u2019s VERY powerful and not well understood by many, so in this video I break down everything you need to know about MCP at a high level.\n\nI go quick here unlike my usual videos, but I call out a bunch of different resources you can use to dive into anything deeper that you\u2019re curious about - MCP architecture, building your own MCP server, integrating your custom AI agent with MCP, etc.\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nCheck out Stagehand, an incredible tool to crawl and scrape websites with natural language which I used in this video:\n\nhttps://github.com/browserbase/stagehand\n\nAnd here is the Stagehand MCP server that I showcased (you will need a Browserbase API key which is free to start!):\n\nhttps://github.com/browserbase/mcp-server-browserbase/blob/main/stagehand/README.md\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nDocumentation for Claude\u2019s MCP:\n\nhttps://modelcontextprotocol.io/introduction\n\nList of MCP Servers on GitHub:\n\nhttps://github.com/modelcontextprotocol/servers\n\nExample n8n MCP Agent:\n\nhttps://github.com/coleam00/ottomator-agents/tree/main/n8n-mcp-agent\n\nn8n Community Node for MCP:\n\nhttps://github.com/nerding-io/n8n-nodes-mcp\n\nExample Pydantic AI MCP Agent:\n\nhttps://github.com/coleam00/ottomator-agents/tree/main/pydantic-ai-mcp-agent\n\nDive deep into the architecture of MCP:\n\nhttps://modelcontextprotocol.io/docs/concepts/architecture\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n00:00 - MCP is Blowing Up\n01:55 - What is MCP?\n03:12 - Making MCP \"Click\" (Deep Dive with Diagrams)\n05:33 - How Agents Work with MCP\n07:16 - Word of Caution - What MCP Isn't\n08:17 - Where You Can Use MCP\n09:47 - MCP Servers You Can Use NOW\n11:18 - How to Set Up MCP Servers\n12:08 - Using MCP Servers in Claude Desktop\n13:11 - MCP Demo in Claude Desktop (Brave + Stagehand)\n14:09 - Building with MCP (Servers and Clients)\n15:22 - Building Your Own MCP Server\n18:09 - MCP with n8n AI Agents\n20:10 - MCP with Python AI Agents\n21:56 - The Future of MCP\n23:51 - Outro\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nJoin me as I push the limits of what is possible with AI. I'll be uploading videos at least two times a week - Sundays and Wednesdays at 7:00 PM CDT!",
                "publishedAt": "2025-03-20T00:00:48Z",
                "thumbnail": "https://i.ytimg.com/vi/v_6EXt6T83I/default.jpg"
            },
            {
                "id": "e7qvd2bOITc",
                "title": "OpenAI\u2019s BRAND NEW Agents SDK (Crash Course)",
                "description": "OpenAI has JUST released their Agents SDK, a production ready upgrade of Swarm that makes it a walk in the park to develop AI agents and connect them together to build agentic systems.\n\nIn this video we'll explore the OpenAI Agents SDK together, build some powerful agents with it, and see if this is worth using compared to other framework options like Pydantic AI and LangGraph. Is it really production ready and not riddled with abstractions as they claim?\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nStop blindly trusting AI IDEs like Cursor and Windsurf - it\u2019s WAY too important to test your code and Qodo can help you with that on top of being a very powerful AI coding assistant. Download Qodo for free:\n\nhttps://www.qodo.ai/\n\nDon\u2019t get me wrong, AI IDEs are fantastic, you just need to make sure you\u2019re properly validating the code too!\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nAll the code created in this video can be found here:\n\nhttps://github.com/coleam00/ottomator-agents/tree/main/openai-sdk-agent\n\nCheck out the OpenAI Agents SDK on GitHub:\n\nhttps://github.com/openai/openai-agents-python/tree/main\n\nAnd here are the docs to get you started:\n\nhttps://openai.github.io/openai-agents-python/\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n00:00 - Introducing OpenAI's Agents SDK\n01:29 - Agents SDK Overview\n03:15 - Demo of What We're Building Together\n04:59 - V1 - Creating a Basic Agents SDK Agent\n07:11 - V2 - Structured Outputs (Reduces Hallucinations)\n09:18 - Qodo\n11:36 - V3 - Adding Agent Tools\n14:28 - V4 - Agent Handoffs\n19:25 - V5.1 - Guardrails (Big Deal)\n22:52 - V5.2 - Context Management\n25:04 - V5.3 - Tracing\n27:13 - Is OpenAI's Agents SDK Worth Using?\n30:37 - Outro\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nJoin me as I push the limits of what is possible with AI. I'll be uploading videos at least two times a week - Sundays and Wednesdays at 7:00 PM CDT!",
                "publishedAt": "2025-03-17T00:00:35Z",
                "thumbnail": "https://i.ytimg.com/vi/e7qvd2bOITc/default.jpg"
            },
            {
                "id": "hKrl5Gr7hM0",
                "title": "Create Your Own Private Local AI Cloud Stack in Under 20 Minutes",
                "description": "I've gotten a LOT of requests for this video so I'm really excited for this one!\n\nI\u2019ve covered the Local AI Package a lot on my channel. It\u2019s the easiest way to get all your local AI up and running in a single stack - your LLMs (Ollama), database (Supabase and Qdrant), automation tools (n8n + Flowise), local web search (SearXNG), and user interface (Open WebUI).\n\nBut even with local AI, we don\u2019t always want to run it on our own computer! Sometimes you want others (like your internal team) using your local AI setup, you want it running 24/7, you don\u2019t want the stack hogging resources on your machine, you want access to hardware you don\u2019t have, or all of the above.\n\nIn this video, I\u2019ll show you step by step how to deploy the local AI package to a private cloud instance so you can have all the benefits of local AI without having to run it on your machine. This even includes setting up subdomains for all the services like n8n and Open WebUI and the entire process could NOT be easier with some new additions to the package!\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nLocal AI Package (100% free and open source):\n\nhttps://github.com/coleam00/local-ai-packaged\n\nVideo showing how to deploy and use the local AI package on your own computer (similar process, but I also show a simple n8n agent):\n\nhttps://youtu.be/pOsO40HSbOo\n\nVideo where I cover using this package to build a local AI agent with n8n:\n\nhttps://youtu.be/T2QWhXpnT5I\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n00:00 - Why Deploy Your Local AI Stack\n01:38 - Local AI Package Overview\n03:16 - Cloud Hosting Platform Options\n04:59 - Creating our Linux Cloud Instance\n06:44 - Configuring Firewalls\n08:18 - DNS Setup for Subdomains\n09:30 - Installing the Local AI Package\n14:31 - Showcasing the End Result!\n16:17 - Outro\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nJoin me as I push the limits of what is possible with AI. I'll be uploading videos at least two times a week - Sundays and Wednesdays at 7:00 PM CDT!",
                "publishedAt": "2025-03-13T00:00:40Z",
                "thumbnail": "https://i.ytimg.com/vi/hKrl5Gr7hM0/default.jpg"
            },
            {
                "id": "9eQt2VHr47I",
                "title": "Build AI Agents that EVOLVE Over Time",
                "description": "One of the biggest advantages of building AI agents over traditional automations is that they are supposed to act more like a human. But for being so human, they sure have a pretty terrible memory most of the time.\n\nWe want our agents to get smarter over time through interacting with us - remembering goals, instructions, corrections, our preferences, etc.\n\nThis kind of long term memory is when you really start to take your agents to the next level of personalization and human like behavior. In the video I link to with this short, I\u2019ll show you step by step how to build these self-learning AI agents using an open source Python library called Mem0 which is specifically built for this purpose.",
                "publishedAt": "2025-03-11T19:49:50Z",
                "thumbnail": "https://i.ytimg.com/vi/9eQt2VHr47I/default.jpg"
            },
            {
                "id": "iOZpiXLT7iY",
                "title": "Build AI Agents that EVOLVE Over Time",
                "description": "One of the biggest advantages of building AI agents over traditional automations is that they are supposed to act more like a human. But for being so human, they sure have a pretty terrible memory most of the time.\n\nWe want our agents to get smarter over time through interacting with us - remembering goals, instructions, corrections, our preferences, etc.\n\nThis kind of long term memory is when you really start to take your agents to the next level of personalization and human like behavior. In this video, I\u2019ll show you step by step how to build these self-learning AI agents using an open source Python library called Mem0 which is specifically built for this purpose.\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nAll the Mem0 agent code covered in this video can be found here:\n\nhttps://github.com/coleam00/ottomator-agents/tree/main/mem0-agent\n\nMem0:\n\nhttps://github.com/mem0ai/mem0\n\nVisit the oTTomator Live Agent Studio and try out the Mem0 agent for yourself for free!\n\nhttps://studio.ottomator.ai/\n\nYou get 100 tokens when you sign up, and tokens are just my way to make sure you don\u2019t drain my bank account testing my agents ;)\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n00:00 - Self-Evolving Agents with Mem0\n01:35 - Using Gemini to Show We Need Mem0\n03:02 - Pydantic AI Mem0 Agent Demo\n04:48 - Mem0 GitHub (100% Open Source)\n05:29 - Our Mem0 Implementation Overview\n06:44 - Version 1 - Basic Mem0 Setup\n10:24 - Version 1 Demo\n12:09 - Version 2 - Mem0 + Supabase Integration \n13:23 - Version 2 Demo\n15:53 - Version 3 - Frontend + Supabase Authentication\n17:44 - Version 3 Demo\n21:26 - Bonus Section - How Mem0 Works\n24:31 - Outro\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nJoin me as I push the limits of what is possible with AI. I'll be uploading videos at least two times a week - Sundays and Wednesdays at 7:00 PM CDT!",
                "publishedAt": "2025-03-10T00:00:28Z",
                "thumbnail": "https://i.ytimg.com/vi/iOZpiXLT7iY/default.jpg"
            },
            {
                "id": "T2QWhXpnT5I",
                "title": "The ULTIMATE n8n RAG AI Agent Template - Local AI Edition",
                "description": "Retrieval Augmented Generation (RAG) is the most widely adopted method for giving AI agents access to your knowledge base so they can be domain experts on your documents. Depending on your use case, however, RAG by itself is often not powerful enough. That\u2019s why over the past month I\u2019ve started to cover Agentic RAG, which is one of the best ways to take RAG further for better results and flexibility to work with the different types of documents you have.\n\nRecently on my channel, I showcased my ultimate n8n Agentic RAG AI Agent template, which is available for you to download right now (link below) as a fantastic starting point to build your own agentic RAG system with no code. However, an overwhelming number of you asked for a 100% local version of the agent, so that is what I\u2019m bringing to you now!\n\nIn this video, I\u2019ll walk you through the local n8n Agentic RAG workflow (link to this template below as well), use cases it covers, and how to set it all up so that you have a 100% offline, secure, and powerful RAG agent.\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nCheck out Cartesia and create your free account to check out their insanely fast and natural-sounding voice models:\n\nhttps://cartesia.ai/\n\nCartesia is incredible for building voice agents, so if you're a developer looking to leverage a robust API to build agents with voice built in, definitely check them out!\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nDownload the ultimate local n8n RAG agent template here (within the local AI package):\n\nhttps://github.com/coleam00/local-ai-packaged/blob/main/n8n/backup/workflows/V3_Local_Agentic_RAG_AI_Agent.json\n\nLocal AI Package:\n\nhttps://github.com/coleam00/local-ai-packaged/tree/main\n\nDownload the non-local version of the ultimate n8n RAG agent template here:\n\nhttps://github.com/coleam00/ottomator-agents/tree/main/n8n-agentic-rag-agent\n\nI created an agentic RAG agent in Python as well:\n\nhttps://www.youtube.com/watch?v=_R-ff4ZMLC8\n\nWeaviate article on Agentic RAG:\n\nhttps://weaviate.io/blog/what-is-agentic-rag\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n00:00 - Introducing the local n8n RAG Template\n01:28 - What is Agentic RAG?\n04:42 - Overview of the local Agentic RAG Agent\n05:35 - Demo 1 - Basic RAG Lookup\n06:55 - Demo 2 - Specific File Lookup\n08:12 - Demo 3 - CSV SQL Query\n10:43 - Cartesia\n13:05 - Agent Walkthrough Starting with DB Setup \n16:33 - Setting up our Knowledge Base\n24:54 - Building our Agentic RAG Agent\n28:30 - Important Note on n8n + Ollama\n31:23 - Last Demo\n32:07 - Outro\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nJoin me as I push the limits of what is possible with AI. I'll be uploading videos at least two times a week - Sundays and Wednesdays at 7:00 PM CDT!",
                "publishedAt": "2025-03-06T01:00:18Z",
                "thumbnail": "https://i.ytimg.com/vi/T2QWhXpnT5I/default.jpg"
            },
            {
                "id": "HD6c_yLcBsY",
                "title": "An AI Agent that BUILDS AI Agents",
                "description": "Archon is the world's first \"Agenteer\" - an AI agent that literally creates other AI agents from scratch! All with pure code so you aren\u2019t tied to any platform, and it\u2019s a specialized agent trained for specific frameworks through documentation and advanced knowledge retrieval practices so you\u2019ll get way better results than the generalist AI coding assistants like Windsurf, Cursor, or Cline.\n\nArchon is in it\u2019s infancy, but I\u2019ve got huge plans for it and I want to bring you along for the ride since it's fully open source!\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nCheck out Archon on GitHub, try it yourself, and give the repo a star!\n\nhttps://github.com/coleam00/Archon/tree/main",
                "publishedAt": "2025-03-04T20:48:36Z",
                "thumbnail": "https://i.ytimg.com/vi/HD6c_yLcBsY/default.jpg"
            },
            {
                "id": "GjR5UsVGE60",
                "title": "Introducing Archon - an AI Agent that BUILDS AI Agents",
                "description": "Archon is the world's first \"Agenteer\" - an AI agent that literally creates other AI agents from scratch! All with pure code so you aren\u2019t tied to any platform, and it\u2019s a specialized agent trained for specific frameworks through documentation and advanced knowledge retrieval practices so you\u2019ll get way better results than the generalist AI coding assistants like Windsurf, Cursor, or Cline.\n\nArchon is in it\u2019s infancy, but I\u2019ve got huge plans for it and I want to bring you along for the ride since it's fully open source! I\u2019m purposefully releasing it in iterations as I develop it instead of releasing the final product at the end because:\n\n1. I want to use it as a tool to teach you how to build super powerful AI agents with Pydantic AI and LangGraph (other frameworks in the future too)\n2. I\u2019m \u201cbuilding Archon in public\u201d so you can see my process of building an advanced AI agent from inception all the way to something insanely powerful\n3. It allows for people like you to contribute since I really want Archon to be a community driven project! It\u2019s a BIG undertaking so I\u2019m looking to you for help!\n\nIn this video, I show you what Archon is, why it\u2019s so powerful, and all the big plans I have to create it into a monster of an AI agent.\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nCheck out Archon on GitHub, try it yourself, and give the repo a star!\n\nhttps://github.com/coleam00/Archon/tree/main\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n00:00 - Unveiling Archon\n02:01 - Overview and Demo\n06:18 - Archon GitHub Repo\n08:01 - Installing Archon (with Custom UI)\n10:28 - Future Plans Page\n11:00 - V5: Multi-Agent Coding Workflow\n12:35 - V6: Tool Library and Example Integration\n13:52 - V7: LangGraph Documentation\n15:02 - V8: Self-Feedback Loop\n15:29 - V9: Self Agent Execution\n16:48 - V10: Multi-Framework Support\n17:11 - V11: Autonomous Framework Learning\n17:56 - V12: Advanced RAG Techniques\n18:22 - V13: MCP Agent Marketplace\n19:05 - Future Integrations\n25:58 - Outro\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nJoin me as I push the limits of what is possible with AI. I'll be uploading videos at least two times a week - Sundays and Wednesdays at 7:00 PM CDT!",
                "publishedAt": "2025-03-03T01:00:12Z",
                "thumbnail": "https://i.ytimg.com/vi/GjR5UsVGE60/default.jpg"
            },
            {
                "id": "mQt1hOjBH9o",
                "title": "I Built the ULTIMATE n8n RAG AI Agent Template",
                "description": "RAG (Retrieval Augmented Generation) is the most popular tool to give AI agents access to your knowledge base so it can be a domain expert for your documents. It\u2019s also very easy to implement in no code tools such as n8n since it\u2019s so widely adopted and supported. It comes with its fair share of shortcomings though because RAG:\n\n- Can't analyze tables well - no ability to calculate averages, sums, or trends\n- Misses the \"big picture\" because documents are split into small pieces\n- Struggles with connecting information across documents and sections\n- Can't dynamically switch between document lookup and data analysis\n\nHow do you solve for all of these limitations? The answer is with Agentic RAG and I show you exactly how to implement this with n8n in this video with a template you can download and use right now (link below).\n\nAgentic RAG gives AI agents the ability to reason more about how it explores the knowledge base, self-improve RAG lookups, and choose between different tools based on the user's question. When asked about trends in a spreadsheet, it uses SQL to calculate precise answers. When context is needed from an entire document, it searches the full text instead of a RAG lookup. The agent intelligently switches between these approaches.\n\nThis gives you:\n\n- Accurate calculations for numerical data\n- Complete document context when needed\n- Connected insights across all your information\n- Dynamic switching between search and analysis\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nDownload the ultimate n8n RAG agent template here:\n\nhttps://github.com/coleam00/ottomator-agents/tree/main/n8n-agentic-rag-agent\n\nI created an agentic RAG agent in Python as well:\n\nhttps://www.youtube.com/watch?v=_R-ff4ZMLC8\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nCheck out Unstract, a free and open source tool to turn unstructured documents into structured data as workflows you can deploy as API endpoints or ETL pipelines! Dealing with unstructured data for RAG AI agents is super common so this is a really useful tool for us agent builders to include in our RAG pipelines:\n\nhttps://github.com/Zipstack/unstract\n\nThey have fantastic documentation for using their platform as well:\n\nhttps://docs.unstract.com/unstract/index.html\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n00:00 - Shortcomings of RAG\n01:32 - Introducing the n8n Agentic RAG Template\n05:14 - Agentic RAG Agent Demo\n09:28 - Unstract\n11:30 - Setting up Supabase for Our Agent\n14:23 - RAG Pipeline Deep Dive\n26:26 - Building Our Agent and its RAG Tools\n32:36 - Last Demo\n33:29 - Outro\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nJoin me as I push the limits of what is possible with AI. I'll be uploading videos at least two times a week - Sundays and Wednesdays at 7:00 PM CDT!",
                "publishedAt": "2025-02-27T01:00:44Z",
                "thumbnail": "https://i.ytimg.com/vi/mQt1hOjBH9o/default.jpg"
            }
        ],
        "cached_at": "2025-03-24T09:45:52.316905"
    }
}